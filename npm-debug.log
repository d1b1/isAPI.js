0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.1.59
3 info using node@v0.8.8
4 verbose publish [ '.' ]
5 verbose read json /Users/steve/Dropbox/github/RandD/isAPI.js/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/steve/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz
14 verbose folder .
15 info prepublish isapi.js@1.0.5
16 silly lockFile 612f98ac-05183-0-9336638180539012-tmp-tgz /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz
17 verbose lock /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz /Users/steve/.npm/612f98ac-05183-0-9336638180539012-tmp-tgz.lock
18 silly lockFile 612f98ac-05183-0-9336638180539012-tmp-tgz /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz
19 verbose tar unpack /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/tmp.tgz
20 silly lockFile 51f34f74-05183-0-9336638180539012-package /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package
21 verbose lock /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package /Users/steve/.npm/51f34f74-05183-0-9336638180539012-package.lock
22 silly gunzTarPerm modes [ '777', '666' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
25 silly gunzTarPerm extractEntry .npmignore
26 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
27 silly gunzTarPerm extractEntry README.md
28 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
29 silly gunzTarPerm extractEntry example.js
30 silly gunzTarPerm modified mode [ 'example.js', 420, 438 ]
31 silly gunzTarPerm extractEntry .travis.yml
32 silly gunzTarPerm modified mode [ '.travis.yml', 420, 438 ]
33 silly gunzTarPerm extractEntry lib/isapi.js
34 silly gunzTarPerm modified mode [ 'lib/isapi.js', 420, 438 ]
35 silly gunzTarPerm extractEntry lib/auth/authorization.js
36 silly gunzTarPerm modified mode [ 'lib/auth/authorization.js', 420, 438 ]
37 silly gunzTarPerm extractEntry lib/auth/authUtil.js
38 silly gunzTarPerm modified mode [ 'lib/auth/authUtil.js', 420, 438 ]
39 silly gunzTarPerm extractEntry lib/auth/oauth.js
40 silly gunzTarPerm modified mode [ 'lib/auth/oauth.js', 420, 438 ]
41 silly gunzTarPerm extractEntry test/blank.js
42 silly gunzTarPerm modified mode [ 'test/blank.js', 420, 438 ]
43 silly gunzTarPerm extractEntry test/maker.js
44 silly gunzTarPerm modified mode [ 'test/maker.js', 420, 438 ]
45 verbose read json /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package/package.json
46 silly lockFile 51f34f74-05183-0-9336638180539012-package /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package
47 verbose from cache /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package/package.json
48 verbose tar pack [ '/Users/steve/.npm/isapi.js/1.0.5/package.tgz',
48 verbose tar pack   '/var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package' ]
49 verbose tarball /Users/steve/.npm/isapi.js/1.0.5/package.tgz
50 verbose folder /var/folders/dd/s_scwdrs2r74q3sgmfc9zcz80000gn/T/npm-45805/1368592605183-0.9336638180539012/package
51 silly lockFile 0a5a12a7-e-npm-isapi-js-1-0-5-package-tgz /Users/steve/.npm/isapi.js/1.0.5/package.tgz
52 verbose lock /Users/steve/.npm/isapi.js/1.0.5/package.tgz /Users/steve/.npm/0a5a12a7-e-npm-isapi-js-1-0-5-package-tgz.lock
53 silly lockFile 0a5a12a7-e-npm-isapi-js-1-0-5-package-tgz /Users/steve/.npm/isapi.js/1.0.5/package.tgz
54 silly lockFile 24fe2472-steve-npm-isapi-js-1-0-5-package /Users/steve/.npm/isapi.js/1.0.5/package
55 verbose lock /Users/steve/.npm/isapi.js/1.0.5/package /Users/steve/.npm/24fe2472-steve-npm-isapi-js-1-0-5-package.lock
56 silly lockFile 24fe2472-steve-npm-isapi-js-1-0-5-package /Users/steve/.npm/isapi.js/1.0.5/package
57 verbose tar unpack /Users/steve/.npm/isapi.js/1.0.5/package.tgz
58 silly lockFile 24fe2472-steve-npm-isapi-js-1-0-5-package /Users/steve/.npm/isapi.js/1.0.5/package
59 verbose lock /Users/steve/.npm/isapi.js/1.0.5/package /Users/steve/.npm/24fe2472-steve-npm-isapi-js-1-0-5-package.lock
60 silly gunzTarPerm modes [ '777', '666' ]
61 silly gunzTarPerm extractEntry package.json
62 silly gunzTarPerm extractEntry .npmignore
63 silly gunzTarPerm extractEntry README.md
64 silly gunzTarPerm extractEntry example.js
65 silly gunzTarPerm extractEntry .travis.yml
66 silly gunzTarPerm extractEntry lib/isapi.js
67 silly gunzTarPerm extractEntry lib/auth/authorization.js
68 silly gunzTarPerm extractEntry lib/auth/authUtil.js
69 silly gunzTarPerm extractEntry lib/auth/oauth.js
70 silly gunzTarPerm extractEntry test/blank.js
71 silly gunzTarPerm extractEntry test/maker.js
72 verbose read json /Users/steve/.npm/isapi.js/1.0.5/package/package.json
73 silly lockFile 24fe2472-steve-npm-isapi-js-1-0-5-package /Users/steve/.npm/isapi.js/1.0.5/package
74 silly shasum updated bytes 14116
75 info shasum 2a5aedd4a8fdcc37f3a58654e360e8bed7038cb2
75 info shasum /Users/steve/.npm/isapi.js/1.0.5/package.tgz
76 verbose from cache /Users/steve/.npm/isapi.js/1.0.5/package/package.json
77 verbose chmod /Users/steve/.npm/isapi.js/1.0.5/package.tgz 666
78 verbose chown /Users/steve/.npm/isapi.js/1.0.5/package.tgz [ 501, 20 ]
79 silly lockFile 3a52ce78- .
80 silly publish { name: 'isapi.js',
80 silly publish   version: '1.0.5',
80 silly publish   author: { name: 'Stephan Smith', email: 'Stephan.Smith.BC93@gmail.com' },
80 silly publish   description: 'Chained Rest functions for testing API with Mocha or Jasmine.',
80 silly publish   engines: { node: '0.8.8', npm: '1.1.9' },
80 silly publish   keywords: [ 'mocha', 'api', 'chain', 'test', 'jasmine' ],
80 silly publish   repository: { type: 'git', url: 'http://github.com/d1b1/isAPI.js.git' },
80 silly publish   main: './lib/isapi',
80 silly publish   licenses:
80 silly publish    [ { type: 'The MIT License',
80 silly publish        url: 'http://www.opensource.org/licenses/mit-license.php' } ],
80 silly publish   dependencies:
80 silly publish    { JSONPath: '~0.9.1',
80 silly publish      mocha: '~1.9.0',
80 silly publish      underscore: '~1.4.4',
80 silly publish      request: '~2.12.0' },
80 silly publish   scripts:
80 silly publish    { start: './bin/index.js',
80 silly publish      test: './node_modules/.bin/mocha test/blank.js --reporter list' },
80 silly publish   readme: 'isAPI.js\n========\n\nNode.js Library for testing API endpoints with chained HTTP methods.\n\nStill very pre-beta. No tests for the test yet.\n\n```\n   api\n    .path(\'/maker/100\')\n    .get().json()\n    .assertions(\n      { \n        \'$.data.name\': function(val) { assert.equal(val, \'Vermont Blue\') },\n        \'$.data._id\': function(val) { assert.equal(val, 100) }\n      }\n    )\n    .done();\n```\n\n[![Build Status](https://travis-ci.org/d1b1/isAPI.js.png?branch=master)](https://travis-ci.org/d1b1/isAPI.js)\n\n## Objective\nProvide a super DRY API testing pattern, using the jQuery Chaining of REST attributes. Mocha\nand Jasmine both provide support for testing asynch calls. During the development of an API\nthat requires OAuth for all not Get calls I found the tests were getting out of hand. This\nlibrary was written to make may tests readable, even late nightÂ¡\n\n*  JQuery like chainable methods!\n*  Provide the ability to test all elements of an API call, options, response, status codes.\n*  Provide Custom callbacks for response parsing.\n*  Support for both Mocha and Jasmine\n*  Provide Custom Authentication callbacks for different OAuth Signatures.\n\n## Download\nThis is a NPM package. You can download from the package, or call the Github.\n\n```\n\n  npm install isAPI\n  or \n  npm install git://github.com/d1b1/isAPI.js.git#master\n\n  // Sample code.\n  var isAPI = require(\'isapi\');\n  var api = new isAPI;\n\n  // Provide the hostname (do not include HTTP)\n  api.host(\'api.formagg.io\');\n\n```\n\n## Example of a GET\nThis will call the /maker/ID path with a GET and will test the statusCode, data and raw.\n\n```\n\n  describe("/Maker", function(done) {   \n    it("should return a maker", function(done){\n      api\n        .path("/maker/1").query(\'a=111\').query(\'b=111\')\n        .json()\n        .get()\n        .assertions(\n          { \n            \'$.statusCode\': function(val) { assert.equal(val, 401) },\n            \'$.data\': function(val) { assert.equal(val, \'Unauthorized\') },\n            \'$.raw\': function(val) { assert.equal(val, \'111\') }\n          }\n        )\n        .done(done);\n    );\n\n  });\n\n```\n\n## Example of a Post\nHere is an example of a HTTP Post. The data for the request is defined in the .post() method.\n\n```\n  // Create a new Maker in the formagg.io API with Name, Country and State,\n  // using a Post, and entpint of /maker. Test passes if the result contains\n  // the required fields.\n\n  api\n    .url("/maker")\n    .post( \n     {\n        name: "Vermont Creamery",\n        country: "United States",\n        state: "Vermont"\n     }\n    )\n    .assertions(\n      {\n        "$.statusCode": function(val) { assert.equal(val, 200),\n        "$.data._id": function(val) { assert.equal(val, this.port.name), \n        "$.data.name": function(val) { assert.equal(val, this.port.name),\n        "$.data.country": function(val) { assert.equal(val, this.port.country)\n      }\n    )\n    .done(done);\n\n```\n\n## Defaults\nTo keep things DRY and readable, a few things are assumes or defined once. You can of course\nmake your API rests as explicit as you want. The following are assumed.\n\n*  All requests are assume to be JSON (application/json). use the `json()` or `contenttype()` to change.\n*  If no Verb is defined then all request are assumed to be GETs.\n*  If no protocal is defined its assumed to be HTTP. Use `http()` or `https()` to set explicitly.\n\n## Options\nThe are methods that help with setup and debugging of the calls. \n\n*  `.done(done)` - Last element in the chain. Executes the call. (MUST BE LAST METHOD IN CHAIN). The `done` links the call\nto the Mocha or Jasmine async `done` function and ensures the tests comply with the testing framework flow.\n*  `.debug()` - Dumps out the HTTP requests and resulting data. Also .debug(true) or .debug(false) works during testing.\n\n## .Path() & .Query()\nThese two options can be used to either define a base path or to build a path using one or more sets.\n\n*  `.path( \'/path/to\' )` - Accepts a string. One for API call. \n*  `.query()` - Helper method to append values to the base path. Accepts the following\n*  `.query( \'field=1\')` - Single key value string.\n*  `.query( [ \'field=1\', \'field2=2\' ])` - Array of key values strings.\n*  `.qerry( { field1: 1, field2: 2} )` - Object of key values.\n\n## .Json() \nThis sets the content type. Alternate versions. .contenttype(\'xml,json,html\')\n\n## HTTP Verbs\nUse the following to set the HTTP verb.\n\n*  `.get()` - Sets the Method to \'GET\'. Use can pass in a string, array or object argument to add to the path.\n*  `.post()` - Sets the Method to \'POST\'. Argument (Object) is used in the request body.\n*  `.put()` - Sets the Method to \'PUT\'. Argument (Object) is used in the request body.\n*  `.delete()` - Sets the Method to \'DELETE\'.\n\n## Protocals\nCurrently this only supports HTTP. HTTPs is coming. Use the http() for https() to set the protocal at the call level.\n\n### .Post() & .Put()\nThis sets the rest body. Accepts a object of key values pairs.\n\n## .Debug()\nOptional method. This is a chainable method that enables or disables the debug output per call. Defaults to true when in the chain. \nUse true or false to enable or disable in existing tests. \n\n## Assertions\nThis an object with each key contains the HTTP request value or the data value to check. Its assumed you will\nwant to test a number of elements in the API response. The JSONPath pattern is issued to parse the response\nand provide a patterns for testing elements, arrays and patterns in the data.\n\nRead [Stehan.Goessner Post](http://goessner.net/articles/JsonPath/) for more about JSONPath.\n\n## Response Data Object\nAll response data is testable. Note the `$` is not the Jquery selector.\n\n*  `$.statusCode` - HTTP statusCode (200, 401 etc).\n*  `$.options` - Contains all the rest options; path, hostname, headers etc.\n*  `$.data` - Parsed response data.\n*  `$.raw` - Unparsed HTTP response string.\n\n## Experimental\n\n`.parse()` - Provides the ability to parse the response object with a callback. This might\nbe used to remove API wrappers and content that makes tests hard to read. This will be something\nthat can be defined for all API calls, or at the API call levels.\n\nExample of a parse call that will remove all data and only return the .data value with\na specific value in the response call. \n\n```\n  .get()\n  .parse(\n    function(data) {  return data.name } \n  )\n  .done()\n```\n\n## Dependencies\nThis code base curently assumes you are using the Mocha packages.\n\n*  [JSONPath](https://npmjs.org/package/JSONPath)\n*  [underscore](https://npmjs.org/package/underscore)\n*  [request](https://npmjs.org/package/request)\n\n## Roadmap\nThe following are features and changes planned for the next few weeks.\n\n*  Storage of tests and results for chaining of API behaviors.\n*  Better OAuth signature options.\n*  HTTPS protocal support.\n*  Test for the library.\n*  Hints for API calls.\n*  Swagger UI consumption.\n*  Lastly - refactor to allow it to run in a browser.\n\nFeedback is 100% welcome. The current code was hammered together late night to \nmake testing easier and to get an API out the door.\n\n',
80 silly publish   _id: 'isapi.js@1.0.5',
80 silly publish   dist: { shasum: '2a5aedd4a8fdcc37f3a58654e360e8bed7038cb2' } }
81 verbose url raw isapi.js
82 verbose url resolving [ 'https://registry.npmjs.org/', './isapi.js' ]
83 verbose url resolved https://registry.npmjs.org/isapi.js
84 info retry registry request attempt 1 at 00:36:45
85 http PUT https://registry.npmjs.org/isapi.js
86 http 409 https://registry.npmjs.org/isapi.js
87 verbose url raw isapi.js
88 verbose url resolving [ 'https://registry.npmjs.org/', './isapi.js' ]
89 verbose url resolved https://registry.npmjs.org/isapi.js
90 info retry registry request attempt 1 at 00:36:45
91 http GET https://registry.npmjs.org/isapi.js
92 http 200 https://registry.npmjs.org/isapi.js
93 error publish fail Cannot publish over existing version.
93 error publish fail Bump the 'version' field, set the --force flag, or
93 error publish fail     npm unpublish 'isapi.js@1.0.5'
93 error publish fail and try again
94 error System Darwin 12.3.0
95 error command "node" "/usr/local/bin/npm" "publish"
96 error cwd /Users/steve/Dropbox/github/RandD/isAPI.js
97 error node -v v0.8.8
98 error npm -v 1.1.59
99 error code EPUBLISHCONFLICT
100 verbose exit [ 1, true ]
